# ~/.gitconfig
# =============================================================================
# User-specific Git configuration file.
#
# See https://git-scm.com/docs/git-config
#
# {{- /* This file supports Go's text/template language. */ -}}
#
# Sources:
#   https://git-scm.com/docs/git-config/
#   https://github.com/renemarc/dotfiles/blob/master/dot_gitconfig.tmpl

[user]
    name = "{{ .name }}"
    email = "{{ .email }}"
    signingkey = "{{ .signingkey }}"

[commit]
    # https://help.github.com/articles/signing-commits-using-gpg/
    gpgsign = true

    # Specify template file for new commit messages.
    template = ~/.gitmessage.txt

[core]
    # Store global exclusions into a custom file.
    excludesfile = ~/.gitignore_global
    attributesfile = ~/.gitattributes

    whitespace=cr-at-eol
    editor = nano

[pull]
    rebase = false

[push]
    # https://git-scm.com/docs/git-config#git-config-pushdefault
    default = current

    # Make `git push` push relevant annotated tags when pushing branches out.
    followTags = true

[color]
    ui = auto
    interactive = auto

[init]
    defaultBranch = master

[filter "lfs"]
    # Turn a content that by itself is unusable into a usable content.
    required = true

    # Specify the command to convert a worktree file's content to a blob upon checkin.
    clean = git-lfs clean -- %f

    # Specify the command to convert a blob object's content to a worktree file upon checkout.
    smudge = git-lfs smudge -- %f

    # Convert between Large File Storage pointer and actual content.
    process = git-lfs filter-process

[help]
    # Automatically correct and execute mistyped commands.
    autocorrect = 1

[rebase]
    # Create a temporary stash entry before the operation begins.
    autostash = true

[branch]
    # Show most recently changed branches first.
    sort = -committerdate

[web]
    browser = google-chrome

[credential]
{{- if eq .chezmoi.os "darwin" }}
    helper = osxkeychain
{{- end }}

[apply]
    # Detect whitespace errors when applying a patch.
    whitespace = fix

[diff]
    # List submodules commits in the range.
    submodule = log

    # Detect copies as well as renames.
    renames = copies

[diff "bin"]
    # Use `hexdump` to diff binary files.
    textconv = hexdump -v -C

[merge]
    # Include summaries of merged commits in newly created merge commit messages.
    log = true

[include]
    # Include aliases.
    path = .gitconfig_aliases
